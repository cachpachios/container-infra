syntax = "proto3";
package node;

message Empty {}

message ProvisionRequest {
    string container_reference = 1;
    int32 vcpus = 2;
    int32 memory_mb = 3;

    repeated string cmd_args = 4;
    map<string, string> env = 5;
}

message ProvisionResponse {
    string id = 1;
}

message InstanceId {
    string id = 1;
}

message DeprovisionRequest {
    string instance_id = 1;
    int32 timeout_millis = 2; // Timeout for deprovisioning in milliseconds
}

message InstanceList {
    repeated InstanceId instances = 1;
}

message LogMessage {
    string log_type = 1;
    int64 timestamp_ms = 2; // Unix timestamp in milliseconds
    optional string message = 3;
    optional string state = 4; // If log_type is "state"
}

message AllLogs {
    repeated LogMessage logs = 1;
}

message PublishServicePortRequest {
    string id = 1;

    int32 guest_port = 2;
    int32 host_port = 3;
}

service NodeManager {
    rpc Provision (ProvisionRequest) returns (ProvisionResponse);
    rpc Deprovision (DeprovisionRequest) returns (Empty);
    rpc ListInstances (Empty) returns (InstanceList);

    rpc StreamLogs (InstanceId) returns (stream LogMessage);
    rpc GetLogs (InstanceId) returns (AllLogs);

    rpc PublishServicePort (PublishServicePortRequest) returns (Empty);

    rpc Drain(Empty) returns (Empty);
}
